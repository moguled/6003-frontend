[{"/home/codio/workspace/resit-deferral-submission/src/index.js":"1","/home/codio/workspace/resit-deferral-submission/src/App.js":"2","/home/codio/workspace/resit-deferral-submission/src/reportWebVitals.js":"3","/home/codio/workspace/resit-deferral-submission/src/components/signin.js":"4","/home/codio/workspace/resit-deferral-submission/src/components/licenses.js":"5","/home/codio/workspace/resit-deferral-submission/src/components/register.js":"6","/home/codio/workspace/resit-deferral-submission/src/components/LicensesPages/addLicense.js":"7","/home/codio/workspace/resit-deferral-submission/src/components/LicensesPages/Home.js":"8","/home/codio/workspace/resit-deferral-submission/src/components/LicensesPages/Navbar.js":"9"},{"size":500,"mtime":1611943267000,"results":"10","hashOfConfig":"11"},{"size":1491,"mtime":1624623519965,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611943267000,"results":"13","hashOfConfig":"11"},{"size":3480,"mtime":1625231146273,"results":"14","hashOfConfig":"11"},{"size":527,"mtime":1624376008313,"results":"15","hashOfConfig":"11"},{"size":1987,"mtime":1624053666141,"results":"16","hashOfConfig":"11"},{"size":2541,"mtime":1624810784498,"results":"17","hashOfConfig":"11"},{"size":3996,"mtime":1625413190166,"results":"18","hashOfConfig":"11"},{"size":533,"mtime":1624376835297,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1yjbttl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"/home/codio/workspace/resit-deferral-submission/src/index.js",[],["45","46"],"/home/codio/workspace/resit-deferral-submission/src/App.js",["47","48","49","50","51"],"import './App.css';\nimport axios from 'axios'\nimport React, {useEffect, useState} from 'react';\nimport SignIn from './components/signin'\nimport Licenses from './components/licenses'\n\nfunction App() {\n  \n  const [isLogin, loggedIn] = useState(false);\n   \n  \n    {/*This checks the jwt token that is returned from the backend to verify that the correct user is logged in */}\n    useEffect(() =>{ const verifyLogin = async () =>{                                            \n      const usertoken = localStorage.getItem('jwt'); {/* grabs the token from localstorage after its stored.*/}\n      {/* if a token is found in localstorage */}\n      if(usertoken){\n        {/* frontend verify route sends back a header containing the jwttoken. compared against JWT SECRET  */}\n        const verifyRequest = await axios.get('api/users/authenticate',{\n          headers:{ Authorisation: usertoken}\n        })\n        console.log(verifyRequest)\n        {/* keeps LoggedIn status as true if the data comes back true */}\n        loggedIn(verifyRequest.data)\n        if(!verifyRequest.data) {\n          return localStorage.clear()\n        }\n      }else{\n        loggedIn(false)\n      }\n    }\n    verifyLogin()\n  }, [])\n \n  \n  return (\n    <div className=\"App\">\n    \n    {/*This protects the licenses route against non-signed in users. */}\n      \n      {\n        isLogin \n        ? <Licenses loggedIn={loggedIn} /> : <SignIn  loggedIn={loggedIn} />\n      }  \n        \n    </div>\n  );\n}\n\n\n\nexport default App;\n","/home/codio/workspace/resit-deferral-submission/src/reportWebVitals.js",[],"/home/codio/workspace/resit-deferral-submission/src/components/signin.js",["52"],"import React, {useState} from 'react'\nimport axios from 'axios'\n\n//functions that control this page.\nexport default function SignIn({loggedIn}){\n  const [user, setUser] = useState({//Sets the user thats going to login\n    email: '',\n    password: '',\n    name: ''\n  })\n  const[err,setErr] = useState('')\n  \n  \n  \n  \n  \n  const OnChangeInput = e => {\n    const {name, value} = e.target;\n    setUser({...user, [name]:value})\n    setErr('')\n  }\n   \n  //Sign in methods. posts the inputted data to the back\n  const SignInSubmit = async e =>{\n    e.preventDefault()\n    try{\n      const res = await axios.post('/api/users/login',{\n        email: user.email,\n        password: user.password\n      })\n      console.log(res.data.email)           \n      setUser({email: '', password: '', name: ''})\n      localStorage.setItem('jwt', res.data.jwttoken);\n\n      if (res.data.role == \"admin\"){\n        \n         localStorage.setItem('r', \"01234\");\n        \n      }\n      \n      \n      loggedIn(true)\n    }catch(err){\n      err.response.data.errmsg && setErr(err.response.data.errmsg)\n      //console.log(err);\n    }\n  }\n  \n  //Register function upon clicking the register button.\n  const RegisterSubmit = async e =>{\n    e.preventDefault()\n    try{\n      const res = await axios.post('/api/users/register',{\n        email: user.email,\n        password: user.password,\n        name: user.name\n      })\n      setUser({email: '', password: '', name: ''})\n      //Success message is returned upon \n      setErr(res.data.errmsg)\n    }catch (err){\n      err.response.data.errmsg && setErr(err.response.data.errmsg)\n    }\n  }\n  \n  return (\n    <section className=\"signin-page\">\n      <h1> Welcome to my Trading Licenses Application Website </h1>\n      <div className = \"signin-container\">\n        <h1> Sign In </h1>\n        <form onSubmit = {SignInSubmit}>\n          <h2>Email Address </h2>\n          <input type=\"email\" name=\"email\" id=\"signin-email\" className = \"signin-input\"  placeholder=\"Enter email here\" required value={user.email} onChange={OnChangeInput}></input>\n          <h2> Password </h2>\n            <input type=\"password\" name=\"password\" className = \"signin-input\" id=\"signin-password\" placeholder=\"Enter password here\" required value={user.password} onChange={OnChangeInput}></input>\n          <div><button className=\"signin-button\" type='submit'> Sign In  </button> </div>\n          <span> \n            Register here\n          </span>\n          <h4> {err} </h4>\n        </form>\n      </div>\n      <div className = \"register-container\">\n      <h1> Register </h1>\n        <form onSubmit = {RegisterSubmit}>\n          <h2>Email Address </h2>\n          <input type=\"email\" name=\"email\" id=\"register-email\" className=\"register-input\" placeholder=\"Enter email here\" required value={user.email} onChange={OnChangeInput}></input>\n          <h2>Password </h2>\n          <input type=\"password\" name=\"password\" id=\"register-password\" className=\"register-input\" placeholder=\"Enter password here\" required value={user.password} onChange={OnChangeInput}></input>\n          <h2> Name </h2>\n          <input type=\"text\" name=\"name\" id=\"register-name\" className=\"register-input\" placeholder=\"Enter name here\" required value={user.name} onChange={OnChangeInput}></input>\n          <div> <button className = \"register-button\" type='submit'> Register </button> </div>\n        <span> \n           Sign in here  \n        </span>\n        <h4> {err} </h4>\n      </form>\n    </div>\n    \n    </section>\n  )\n}","/home/codio/workspace/resit-deferral-submission/src/components/licenses.js",[],"/home/codio/workspace/resit-deferral-submission/src/components/register.js",[],["53","54"],"/home/codio/workspace/resit-deferral-submission/src/components/LicensesPages/addLicense.js",[],["55","56"],"/home/codio/workspace/resit-deferral-submission/src/components/LicensesPages/Home.js",["57","58","59","60","61"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n//import SearchBox  from 'components/LicensesPages/SearchBox'\n\nexport default function Home() {\n  const [licenses, setlicenses] = useState([])\n  const [currenttoken, setToken] = useState('')\n\n \n  \n  //post request to the back-end to get license documents\n  const getLicenses = async (currenttoken) =>{\n        const res = await axios.get('/api/licenses', {\n            headers:{Authorisation: currenttoken}\n        })\n        setlicenses(res.data)\n    }\n  \n  //this.setState(licenses);\n  \n  //unused search function\n  const SearchBox = ({placeholder,handleChange}) =>{\n  \n   return(\n     <input type= 'serach'\n     className = 'search'\n      placeholder={placeholder}\n      onChange = {handleChange} />\n     )  \n  }\n  \n  //grabs the users jwttoken and sets the function to get licenses to take that token as the argument.\n  useEffect(() => { \n    const currenttoken = localStorage.getItem('jwt')\n    setToken(currenttoken)\n    if(currenttoken){\n      getLicenses(currenttoken)\n        }\n    \n    }, [])\n\n  \n\n   //will only display buttons if user is admin. also admin is validated on back for the update route.\n   const addbutton= (licenseID) => {\n     if (localStorage.getItem('r') == \"01234\"){\n       \n         return<div> <button id=\"approve\" name=\"approve\" value = {licenseID} className=\"changeButton\" onClick={buttonaction}> Approve </button>  &nbsp;\n                     <button id = \"reject\" name=\"reject\" value = {licenseID} className=\"changeButton\" onClick={buttonaction}> Reject </button> &nbsp; \n                     <button id=\"suspend\"  name=\"suspend\" value = {licenseID} className=\"changeButton\" onClick={buttonaction}> Suspend </button> \n                </div>\n     }else{\n       return <h1></h1>\n     }\n   }\n     \n    //response to each button click when updating status\n   const buttonaction = async (e) =>{\n     \n     let newstatus = \"\";\n      \n     switch(e.target.id) {\n       case \"approve\":\n         newstatus = \"accepted\"\n         alert(\"This license application has been approved\")\n         window.location.reload(true);\n         break;\n       case \"reject\":\n         newstatus = \"rejected\"\n         alert(\"This license application has been rejected\")\n         window.location.reload(true);\n         break;\n       case  \"suspend\":\n         newstatus = \"pending\"\n         alert(\"This license application has been set to pending\")\n         window.location.reload(true);\n         break;     \n         \n     }\n       //posting new status update to the database via update route.\n       try{\n            const license_id = e.target.value;           \n            const currenttoken = localStorage.getItem('jwt')            \n            const updateInfo = {license_id, newstatus}\n            const res = await axios.post('/api/licenses/update', updateInfo,{\n              headers:{Authorisation: currenttoken}                                              \n            })\n            console.log(res.data.msg)\n\n        }catch(err){\n         // err.response.data.errmsg && setErr(err.response.data.errmsg)\n          console.log(err);\n        }                          \n      \n    } \n\n \n  return (\n    <div  className=\"license-container\">\n    \n      \n       <h1 className=\"license-header\"> All Current Applications </h1>\n     \n       \n    \n      {   \n     \n          licenses.map(license => (\n            <div className=\"object\">\n                <h3 className=\"objectheader\"> {license.companyname} </h3>\n                <div className=\"details\"> <p> Details: {license.details} </p></div>\n                <div className=\"address\"> <p> Company Address: {license.address} </p></div>\n                <div className=\"bottomrow\"> \n                  <p className=\"statustext\"> Status: {license.status} </p> \n                  <p className=\"username\"> Name : {license.name} </p> \n                </div>\n                {addbutton(license._id)}\n              </div>\n           ))\n      }\n      \n   \n    </div>\n  )\n}","/home/codio/workspace/resit-deferral-submission/src/components/LicensesPages/Navbar.js",["62","63","64"],"import React from 'react'\nimport  { Link } from 'react-router-dom'\n\nexport default function NavBar({loggedIn}) {\n  \n  const signoutClick = () =>{\n    localStorage.clear()\n    loggedIn(false)\n  }\n  \n  \n  return (\n    <div className=\"navigation\" loggedIn={loggedIn}>\n       <h1 className=\"logo\"> Trading Licenses Co </h1>\n       <a onClick={signoutClick} ><Link to=\"/\"> Sign Out  </Link> </a>\n       <a><Link to=\"/apply\"> New Application  </Link> </a>\n       <a><Link to=\"/\"> Home  </Link> </a>\n       \n       \n       \n    </div>\n  )\n}",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":12,"column":5,"nodeType":"71","messageId":"72","endLine":12,"endColumn":116},{"ruleId":"69","severity":1,"message":"70","line":14,"column":54,"nodeType":"71","messageId":"72","endLine":14,"endColumn":112},{"ruleId":"69","severity":1,"message":"70","line":15,"column":7,"nodeType":"71","messageId":"72","endLine":15,"endColumn":50},{"ruleId":"69","severity":1,"message":"70","line":17,"column":9,"nodeType":"71","messageId":"72","endLine":17,"endColumn":112},{"ruleId":"69","severity":1,"message":"70","line":22,"column":9,"nodeType":"71","messageId":"72","endLine":22,"endColumn":74},{"ruleId":"73","severity":1,"message":"74","line":35,"column":25,"nodeType":"75","messageId":"76","endLine":35,"endColumn":27},{"ruleId":"65","replacedBy":"77"},{"ruleId":"67","replacedBy":"78"},{"ruleId":"65","replacedBy":"79"},{"ruleId":"67","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":22},{"ruleId":"81","severity":1,"message":"85","line":22,"column":9,"nodeType":"83","messageId":"84","endLine":22,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":46,"column":36,"nodeType":"75","messageId":"76","endLine":46,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":53,"column":15,"nodeType":"88","endLine":53,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":62,"column":6,"nodeType":"91","messageId":"92","endLine":79,"endColumn":7},{"ruleId":"93","severity":1,"message":"94","line":15,"column":8,"nodeType":"88","endLine":15,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":16,"column":8,"nodeType":"88","endLine":16,"endColumn":11},{"ruleId":"93","severity":1,"message":"94","line":17,"column":8,"nodeType":"88","endLine":17,"endColumn":11},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["95"],["96"],["95"],["96"],"no-unused-vars","'currenttoken' is assigned a value but never used.","Identifier","unusedVar","'SearchBox' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]